# Filename:      .zprofile
# Purpose:       user-wide .zprofile file for zsh(1)
# Authors:       anhdle14 (github.com/anhdle14), (c) Duc Le <anhdle14@icloud.com>
# Bug-Reports:   see http://github.com/anhdle14/dotfiles/issues
# License:       This file is licensed under the MIT License
################################################################################
# This file is sourced only for login shells (i.e. shells
# invoked with "-" as the first character of argv[0], and
# shells invoked with the -l flag). It's read after zshenv.
#
# Global Order: zshenv, zprofile, zshrc, zlogin
################################################################################
# Kubectl
if ! type "kubectl" > /dev/null; then
  echo "Please install 'kubectl'"
else
  [[ ! -r $ZDOTDIR/completion/_kubectl ]] && kubectl completion zsh >| $ZDOTDIR/completion/_kubectl
fi

# Kind
if ! type "kind" > /dev/null; then
  echo "Please install 'kind'"
else
  [[ ! -r $ZDOTDIR/completion/_kind ]] && kind completion zsh >| $ZDOTDIR/completion/_kind
fi

# Helm
if ! type "helm" > /dev/null; then
  echo "Please install 'helm'"
else
  [[ ! -r $ZDOTDIR/completion/_helm ]] && helm completion zsh >| $ZDOTDIR/completion/_helm
fi

# Skaffold
if ! type "skaffold" > /dev/null; then
  echo "Please install 'skaffold'"
else
  [[ ! -r $ZDOTDIR/completion/_skaffold ]] && skaffold completion zsh >| $ZDOTDIR/completion/_skaffold
fi

# Istioctl
if ! type "istioctl" > /dev/null; then
  echo "Please install 'istioctl'"
else
  [[ ! -r $ZDOTDIR/completion/_istioctl ]] && istioctl collateral --zsh -o $ZDOTDIR/completion
fi

# Stern
if ! type "stern" > /dev/null; then
  echo "Please install 'stern'"
else
  [[ ! -r $ZDOTDIR/completion/_stern ]] && stern --completion zsh >| $ZDOTDIR/completion/_stern
fi

# Deno
if ! type "deno" > /dev/null; then
  echo "Please install 'deno'"
else
  [[ ! -r $ZDOTDIR/completion/_deno ]] && deno completions zsh >| $ZDOTDIR/completion/_deno
fi

{{- if eq .chezmoi.os "linux" }}

# crictl
if ! type "crictl" > /dev/null; then
  echo "Please install 'containerd'"
else
  [[ ! -r $ZDOTDIR/completion/_crictl ]] && crictl completion zsh >| $ZDOTDIR/completion/_crictl
fi

# kubeadm
if ! type "kubeadm" > /dev/null; then
  echo "Please install 'kubeadm'"
else
  [[ ! -r $ZDOTDIR/completion/_kubeadm ]] && kubeadm completion zsh >| $ZDOTDIR/completion/_kubeadm
fi

# Autostart X
if [[ -z $DISPLAY && $(tty) == /dev/tty1 ]]; then
  startx
fi
{{- end }}

## END OF FILE #################################################################
# vim: filetype=zsh foldmethod=marker autoindent expandtab shiftwidth=2
# code: language=shellscript insertSpaces=true tabsize=2
